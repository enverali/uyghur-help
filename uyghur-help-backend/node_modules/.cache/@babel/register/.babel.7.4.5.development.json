{
  "{\"sourceRoot\":\"C:\\\\Users\\\\mubarak\\\\UyghurHelp\\\\uyghur-help-backend\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\mubarak\\\\UyghurHelp\\\\uyghur-help-backend\",\"filename\":\"C:\\\\Users\\\\mubarak\\\\UyghurHelp\\\\uyghur-help-backend\\\\src\\\\server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\mubarak\\\\UyghurHelp\\\\uyghur-help-backend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\mubarak\\UyghurHelp\\uyghur-help-backend\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\mubarak\\UyghurHelp\\uyghur-help-backend",
      "filename": "C:\\Users\\mubarak\\UyghurHelp\\uyghur-help-backend\\src\\server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\mubarak\\UyghurHelp\\uyghur-help-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\mubarak\\UyghurHelp\\uyghur-help-backend\\src\\server.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\mubarak\\UyghurHelp\\uyghur-help-backend\\src\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\mubarak\\UyghurHelp\\uyghur-help-backend\\src",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _mongodb = require(\"mongodb\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n/* const articlesInfo={\r\n    'learn-react':{\r\n        upvotes:0,\r\n        comments:[],\r\n    },\r\n    'learn-node':{\r\n        upvotes:0,\r\n        comments:[],\r\n    },\r\n    'learn-AWS':{\r\n        upvotes:0,\r\n        comments:[],\r\n    },\r\n} */\nvar app = (0, _express[\"default\"])();\napp.use(_bodyParser[\"default\"].json());\n\nvar withDB =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(operations, res) {\n    var client, db;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _mongodb.MongoClient.connect('mongodb://localhost:27017', {\n              useNewUrlParser: true\n            });\n\n          case 3:\n            client = _context.sent;\n            db = client.db('uyghur-help');\n            _context.next = 7;\n            return operations(db);\n\n          case 7:\n            client.close();\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            res.status(500).json({\n              message: \"Error connecting to db\",\n              error: _context.t0\n            });\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 10]]);\n  }));\n\n  return function withDB(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\napp.get('/api/articles/:name',\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(req, res) {\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            withDB(\n            /*#__PURE__*/\n            function () {\n              var _ref3 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee2(db) {\n                var articleName, articlesInfo;\n                return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        articleName = req.params.name;\n                        _context2.next = 3;\n                        return db.collection('articles').findOne({\n                          name: articleName\n                        });\n\n                      case 3:\n                        articlesInfo = _context2.sent;\n                        res.status(200).json(articlesInfo);\n\n                      case 5:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              }));\n\n              return function (_x5) {\n                return _ref3.apply(this, arguments);\n              };\n            }(), res);\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}()); //app.get('/hellow',(req,res)=> res.send('Hellow !'));\n//app.post('/hellow/:name',(req,res)=> res.send(`Hellow ${req.params.name} !`));\n//app.post('/hellow',(req,res)=> res.send(`Hellow ${req.body.name} !`));\n\napp.post('/api/articles/:name/upvote',\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee5(req, res) {\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            withDB(\n            /*#__PURE__*/\n            function () {\n              var _ref5 = _asyncToGenerator(\n              /*#__PURE__*/\n              regeneratorRuntime.mark(function _callee4(db) {\n                var articleName, articlesInfo, updatedArticleInfo;\n                return regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        articleName = req.params.name;\n                        _context4.next = 3;\n                        return db.collection('articles').findOne({\n                          name: articleName\n                        });\n\n                      case 3:\n                        articlesInfo = _context4.sent;\n                        _context4.next = 6;\n                        return db.collection('articles').updateOne({\n                          name: articleName\n                        }, {\n                          '$set': {\n                            upvotes: articlesInfo.upvotes + 1\n                          }\n                        });\n\n                      case 6:\n                        _context4.next = 8;\n                        return db.collection('articles').findOne({\n                          name: articleName\n                        });\n\n                      case 8:\n                        updatedArticleInfo = _context4.sent;\n                        res.status(200).json(updatedArticleInfo);\n\n                      case 10:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4);\n              }));\n\n              return function (_x8) {\n                return _ref5.apply(this, arguments);\n              };\n            }(), res);\n\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x6, _x7) {\n    return _ref4.apply(this, arguments);\n  };\n}());\napp.post('/api/articles/:name/add-comment', function (req, res) {\n  var _req$body = req.body,\n      username = _req$body.username,\n      text = _req$body.text;\n  var articleName = req.params.name;\n  withDB(\n  /*#__PURE__*/\n  function () {\n    var _ref6 = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee6(db) {\n      var articleInfo, updatedArticleInfo;\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return db.collection('articles').findOne({\n                name: articleName\n              });\n\n            case 2:\n              articleInfo = _context6.sent;\n              _context6.next = 5;\n              return db.collection('articles').updateOne({\n                name: articleName\n              }, {\n                '$set': {\n                  comments: articleInfo.comments.concat({\n                    username: username,\n                    text: text\n                  })\n                }\n              });\n\n            case 5:\n              _context6.next = 7;\n              return db.collection('articles').findOne({\n                name: articleName\n              });\n\n            case 7:\n              updatedArticleInfo = _context6.sent;\n              res.status(200).json(updatedArticleInfo);\n\n            case 9:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function (_x9) {\n      return _ref6.apply(this, arguments);\n    };\n  }(), res);\n});\napp.listen(8000, function () {\n  return console.log('Lisiting port 8000 for backend server !');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "use",
        "badyParser",
        "json",
        "withDB",
        "operations",
        "res",
        "MongoClient",
        "connect",
        "useNewUrlParser",
        "client",
        "db",
        "close",
        "status",
        "message",
        "error",
        "get",
        "req",
        "articleName",
        "params",
        "name",
        "collection",
        "findOne",
        "articlesInfo",
        "post",
        "updateOne",
        "upvotes",
        "updatedArticleInfo",
        "body",
        "username",
        "text",
        "articleInfo",
        "comments",
        "concat",
        "listen",
        "console",
        "log"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\mubarak\\UyghurHelp\\uyghur-help-backend\\src",
      "sourcesContent": [
        "import express from 'express';\r\nimport badyParser from 'body-parser';\r\nimport {MongoClient} from 'mongodb';\r\n\r\n\r\n/* const articlesInfo={\r\n    'learn-react':{\r\n        upvotes:0,\r\n        comments:[],\r\n    },\r\n    'learn-node':{\r\n        upvotes:0,\r\n        comments:[],\r\n    },\r\n    'learn-AWS':{\r\n        upvotes:0,\r\n        comments:[],\r\n    },\r\n} */\r\n\r\nconst app =express();\r\n\r\napp.use(badyParser.json());\r\n\r\n\r\nconst withDB = async(operations,res) =>{\r\n  \r\n    try{\r\n        const client = await MongoClient.connect('mongodb://localhost:27017',{useNewUrlParser:true});\r\n        const db =client.db('uyghur-help');\r\n         await operations(db);\r\n        client.close();\r\n    } catch(error){\r\n        res.status(500).json({ message: \"Error connecting to db\",error});\r\n    }\r\n     \r\n\r\n}\r\napp.get('/api/articles/:name', async (req,res) => {\r\n\r\n    withDB( async (db) =>{\r\n        const articleName =req.params.name;\r\n        const articlesInfo = await db.collection('articles').findOne({name:articleName});\r\n        res.status(200).json(articlesInfo);\r\n    },res);\r\n});\r\n\r\n//app.get('/hellow',(req,res)=> res.send('Hellow !'));\r\n//app.post('/hellow/:name',(req,res)=> res.send(`Hellow ${req.params.name} !`));\r\n//app.post('/hellow',(req,res)=> res.send(`Hellow ${req.body.name} !`));\r\napp.post('/api/articles/:name/upvote', async (req,res)=> {\r\n    withDB( async(db) =>{\r\n        const articleName =req.params.name;\r\n        const articlesInfo = await db.collection('articles').findOne({name:articleName});\r\n        await db.collection('articles').updateOne({name: articleName},{\r\n            '$set':{\r\n                upvotes: articlesInfo.upvotes +1,\r\n            },\r\n        });\r\n        \r\n        const updatedArticleInfo = await db.collection('articles').findOne({name:articleName});\r\n        res.status(200).json(updatedArticleInfo);\r\n    },res);    \r\n});\r\n\r\napp.post('/api/articles/:name/add-comment',(req,res) => {\r\n\r\n    const {username,text}=req.body; \r\n    const articleName = req.params.name;\r\n\r\n    withDB( async(db) =>{\r\n        const articleInfo = await db.collection('articles').findOne({name:articleName});\r\n        await db.collection('articles').updateOne({name:articleName},{\r\n            '$set': {\r\n                comments : articleInfo.comments.concat({username,text}),\r\n            },\r\n        });\r\n        const updatedArticleInfo = await db.collection('articles').findOne({name: articleName});\r\n        res.status(200).json(updatedArticleInfo);\r\n    }, res);\r\n});\r\n\r\n\r\napp.listen(8000,()=>console.log('Lisiting port 8000 for backend server !'));\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1561230307804
  }
}